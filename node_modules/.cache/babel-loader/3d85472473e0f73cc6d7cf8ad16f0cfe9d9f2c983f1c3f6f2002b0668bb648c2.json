{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect, useCallback } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const startTimer = useCallback(() => {\n    setIsRunning(true);\n  }, []);\n  const stopTimer = useCallback(() => {\n    setIsRunning(false);\n  }, []);\n  const resetTimer = useCallback(() => {\n    setTime(0);\n    setIsRunning(false);\n  }, []);\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n      return () => clearInterval(interval);\n    }\n  }, [isRunning]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Timer, \"jKPMAZXPh2SnGtX+RCKw/luObfc=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Fragment","_Fragment","jsxDEV","_jsxDEV","Timer","_s","time","setTime","isRunning","setIsRunning","startTimer","stopTimer","resetTimer","interval","setInterval","prevTime","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/vladi/Desktop/Реакт с клаудии/my-app/src/components/Timer/Timer.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styles from './Timer.module.css'\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { Button, Typography } from '@mui/material';\r\n\r\nconst Timer = () => {\r\n  const [time, setTime] = useState(0); \r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  const startTimer = useCallback(() => {\r\n    setIsRunning(true);\r\n  }, []);\r\n  \r\n  const stopTimer = useCallback(() => {\r\n    setIsRunning(false); \r\n  }, []);\r\n  \r\n  const resetTimer = useCallback(() => {\r\n    setTime(0);\r\n    setIsRunning(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      const interval = setInterval(() => {\r\n        setTime(prevTime => prevTime + 10);  \r\n      }, 10);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isRunning]);\r\n  return (\r\n    <>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Timer"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,UAAU,GAAGX,WAAW,CAAC,MAAM;IACnCU,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,SAAS,GAAGZ,WAAW,CAAC,MAAM;IAClCU,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,UAAU,GAAGb,WAAW,CAAC,MAAM;IACnCQ,OAAO,CAAC,CAAC,CAAC;IACVE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACd,IAAIU,SAAS,EAAE;MACb,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCP,OAAO,CAACQ,QAAQ,IAAIA,QAAQ,GAAG,EAAE,CAAC;MACpC,CAAC,EAAE,EAAE,CAAC;MACN,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EACf,oBACEL,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEP,CAAC;AAACI,EAAA,CA9BID,KAAK;AAAAa,EAAA,GAALb,KAAK;AAiCX,eAAeA,KAAK;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}