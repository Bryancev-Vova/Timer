{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vladi\\\\Desktop\\\\\\u0420\\u0435\\u0430\\u043A\\u0442 \\u0441 \\u043A\\u043B\\u0430\\u0443\\u0434\\u0438\\u0438\\\\my-app\\\\src\\\\components\\\\Timer\\\\Timer.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect, useCallback } from 'react';\nimport { Button, Typography } from '@mui/material';\nimport { STimer } from '../../assets/styles/componets.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const [active, setActive] = useState(false);\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    let interval = null;\n    if (active) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n    } else if (!active && time !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [active, time]);\n  const start = useCallback(() => {\n    setActive(prevState => !prevState);\n  }, []);\n  const reset = useCallback(() => {\n    setTime(0);\n    setActive(false);\n  }, []);\n  const formatTime = useCallback(() => {\n    const getTime = ms => {\n      const minutes = Math.floor(ms / 1000 / 60 % 60);\n      const seconds = Math.floor(ms / 1000 % 60);\n      const milliseconds = ms % 1000;\n      return [minutes, seconds, milliseconds];\n    };\n    const [minutes, seconds, milliseconds] = getTime(time);\n    return `${minutes}:${seconds}:${milliseconds}`;\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(STimer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: formatTime()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: start,\n      children: active ? 'pause' : 'start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"error\",\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n_s(Timer, \"0pgcHvMyV3y+1TM+GSqsixbrAVI=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Button","Typography","STimer","jsxDEV","_jsxDEV","Timer","_s","active","setActive","time","setTime","interval","setInterval","prevTime","clearInterval","start","prevState","reset","formatTime","getTime","ms","minutes","Math","floor","seconds","milliseconds","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/vladi/Desktop/Реакт с клаудии/my-app/src/components/Timer/Timer.tsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './Timer.module.css';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { Button, Typography } from '@mui/material';\r\nimport { start } from 'repl';\r\nimport { STimer } from '../../assets/styles/componets.styles';\r\nconst Timer = () => {\r\n    const [active, setActive] = useState(false);\r\n    const [time, setTime] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let interval: any = null;\r\n        if (active) {\r\n            interval = setInterval(() => {\r\n                setTime(prevTime => prevTime + 10);\r\n            }, 10);\r\n        } else if (!active && time !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [active, time]);\r\n\r\n    const start = useCallback(() => {\r\n        setActive(prevState => !prevState);\r\n    }, []);\r\n\r\n    const reset = useCallback(() => {\r\n        setTime(0);\r\n        setActive(false);\r\n    }, []);\r\n\r\n    const formatTime = useCallback(() => {\r\n        const getTime = (ms: number) => {\r\n            const minutes = Math.floor((ms / 1000 / 60) % 60);\r\n            const seconds = Math.floor((ms / 1000) % 60);\r\n            const milliseconds = ms % 1000;\r\n            return [minutes, seconds, milliseconds];\r\n        };\r\n\r\n        const [minutes, seconds, milliseconds] = getTime(time)\r\n\r\n        return `${minutes}:${seconds}:${milliseconds}`\r\n    }, [time]);\r\n\r\n    return (\r\n      <STimer>\r\n            <h1>Timer</h1>\r\n <Typography variant=\"h4\">{formatTime()}</Typography>\r\n            <Button variant='contained' onClick={start}>\r\n                {active ? 'pause' : 'start'}\r\n            </Button>\r\n            <Button variant='contained'color=\"error\" onClick={reset}>\r\n                Reset\r\n            </Button>\r\n            </STimer>\r\n    );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}