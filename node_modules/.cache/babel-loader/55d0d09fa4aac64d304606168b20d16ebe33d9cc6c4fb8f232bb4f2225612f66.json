{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vladi\\\\Desktop\\\\\\u0420\\u0435\\u0430\\u043A\\u0442 \\u0441 \\u043A\\u043B\\u0430\\u0443\\u0434\\u0438\\u0438\\\\my-app\\\\src\\\\components\\\\Countdown\\\\Countdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Slider, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Countdown = () => {\n  _s();\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [sliderValue, setSliderValue] = useState(0);\n  useEffect(() => {\n    const totalSeconds = Math.round(sliderValue * 60);\n    setMinutes(Math.floor(totalSeconds / 60));\n    setSeconds(totalSeconds % 60);\n  }, [sliderValue]);\n  const handleSliderChange = (event, newValue) => {\n    setSliderValue(newValue);\n  };\n  const handleMinutesChange = event => {\n    const newMinutes = event.target.value;\n    if (newMinutes > 720) {\n      return;\n    }\n    setSliderValue(newMinutes / 60);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      value: sliderValue,\n      onChange: handleSliderChange,\n      step: 0.25,\n      marks: true,\n      min: 0,\n      max: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: minutes,\n      onChange: handleMinutesChange,\n      inputProps: {\n        min: 0,\n        max: 720\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Countdown, \"NlOD+MXxBxFvHiVaXDJmb6STVjA=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Slider","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","Countdown","_s","minutes","setMinutes","seconds","setSeconds","sliderValue","setSliderValue","totalSeconds","Math","round","floor","handleSliderChange","event","newValue","handleMinutesChange","newMinutes","target","value","children","onChange","step","marks","min","max","fileName","_jsxFileName","lineNumber","columnNumber","inputProps","variant","_c","$RefreshReg$"],"sources":["C:/Users/vladi/Desktop/Реакт с клаудии/my-app/src/components/Countdown/Countdown.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography, Slider, TextField } from '@mui/material';\r\n\r\nconst Countdown = () => {\r\n\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  const [sliderValue, setSliderValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const totalSeconds = Math.round(sliderValue * 60);\r\n    setMinutes(Math.floor(totalSeconds / 60));\r\n    setSeconds(totalSeconds % 60);\r\n  }, [sliderValue]);\r\n\r\n  const handleSliderChange = (event: any, newValue: any) => {\r\n    setSliderValue(newValue);\r\n  };\r\n  \r\n  const handleMinutesChange = (event) => {\r\n    const newMinutes = event.target.value;\r\n    if (newMinutes > 720) {\r\n      return; \r\n    }\r\n    setSliderValue(newMinutes / 60);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Slider \r\n        value={sliderValue}\r\n        onChange={handleSliderChange}\r\n        step={0.25}\r\n        marks\r\n        min={0}\r\n        max={60}\r\n      />\r\n\r\n      <TextField\r\n        value={minutes}\r\n        onChange={handleMinutesChange}\r\n        inputProps={{\r\n          min: 0,\r\n          max: 720, \r\n        }}\r\n      />\r\n\r\n      <Typography variant=\"h4\">\r\n        {minutes}:{seconds < 10 ? `0${seconds}` : seconds}  \r\n      </Typography>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Countdown;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMgB,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACJ,WAAW,GAAG,EAAE,CAAC;IACjDH,UAAU,CAACM,IAAI,CAACE,KAAK,CAACH,YAAY,GAAG,EAAE,CAAC,CAAC;IACzCH,UAAU,CAACG,YAAY,GAAG,EAAE,CAAC;EAC/B,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,MAAMM,kBAAkB,GAAGA,CAACC,KAAU,EAAEC,QAAa,KAAK;IACxDP,cAAc,CAACO,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMC,mBAAmB,GAAIF,KAAK,IAAK;IACrC,MAAMG,UAAU,GAAGH,KAAK,CAACI,MAAM,CAACC,KAAK;IACrC,IAAIF,UAAU,GAAG,GAAG,EAAE;MACpB;IACF;IACAT,cAAc,CAACS,UAAU,GAAG,EAAE,CAAC;EACjC,CAAC;EAED,oBACEnB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA,CAACH,MAAM;MACLwB,KAAK,EAAEZ,WAAY;MACnBc,QAAQ,EAAER,kBAAmB;MAC7BS,IAAI,EAAE,IAAK;MACXC,KAAK;MACLC,GAAG,EAAE,CAAE;MACPC,GAAG,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEF/B,OAAA,CAACF,SAAS;MACRuB,KAAK,EAAEhB,OAAQ;MACfkB,QAAQ,EAAEL,mBAAoB;MAC9Bc,UAAU,EAAE;QACVN,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE;MACP;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEF/B,OAAA,CAACJ,UAAU;MAACqC,OAAO,EAAC,IAAI;MAAAX,QAAA,GACrBjB,OAAO,EAAC,GAAC,EAACE,OAAO,GAAG,EAAE,GAAI,IAAGA,OAAQ,EAAC,GAAGA,OAAO;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA,eAEb,CAAC;AAEP,CAAC;AAAA3B,EAAA,CAnDKD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAqDf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}