{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vladi\\\\Desktop\\\\\\u0420\\u0435\\u0430\\u043A\\u0442 \\u0441 \\u043A\\u043B\\u0430\\u0443\\u0434\\u0438\\u0438\\\\my-app\\\\src\\\\components\\\\Countdown\\\\Countdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Slider, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = ({\n  initialMinutes = 0,\n  initialSeconds = 0\n}) => {\n  _s();\n  const [minutes, setMinutes] = useState(initialMinutes);\n  const [seconds, setSeconds] = useState(initialSeconds);\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        }\n        if (seconds === 0) {\n          if (minutes === 0) {\n            clearInterval(interval);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        }\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, minutes, seconds]);\n  const totalSeconds = minutes * 60 + seconds;\n  const reset = () => {\n    setMinutes(initialMinutes);\n    setSeconds(initialSeconds);\n    setIsRunning(false);\n  };\n  const toggle = () => {\n    setIsRunning(!isRunning);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      disabled: isRunning,\n      value: totalSeconds,\n      min: 0,\n      max: 60 * 12,\n      step: 15,\n      onChange: (e, value) => {\n        const newMinutes = Math.floor(value / 60);\n        const newSeconds = value % 60;\n        setMinutes(newMinutes);\n        setSeconds(newSeconds);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggle,\n      children: isRunning ? 'Пауза' : 'Старт'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: reset,\n      children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"unz3f1XFvYwktawbeGYv+zU26oI=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Slider","Button","jsxDEV","_jsxDEV","Countdown","initialMinutes","initialSeconds","_s","minutes","setMinutes","seconds","setSeconds","isRunning","setIsRunning","interval","setInterval","clearInterval","totalSeconds","reset","toggle","children","disabled","value","min","max","step","onChange","e","newMinutes","Math","floor","newSeconds","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vladi/Desktop/Реакт с клаудии/my-app/src/components/Countdown/Countdown.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Slider, Button } from '@mui/material';\r\n\r\ninterface CountdownProps {\r\n  initialMinutes?: number;\r\n  initialSeconds?: number;\r\n}\r\n\r\nconst Countdown: React.FC<CountdownProps> = ({\r\n  initialMinutes = 0,\r\n  initialSeconds = 0\r\n}) => {\r\n  const [minutes, setMinutes] = useState(initialMinutes);\r\n  const [seconds, setSeconds] = useState(initialSeconds);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timer;\r\n    if (isRunning) {\r\n      interval = setInterval(() => {\r\n        if (seconds > 0) {\r\n          setSeconds(seconds - 1);\r\n        }\r\n        if (seconds === 0) {\r\n          if (minutes === 0) {\r\n            clearInterval(interval);\r\n          } else {\r\n            setMinutes(minutes - 1);\r\n            setSeconds(59);\r\n          }\r\n        } \r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isRunning, minutes, seconds]);\r\n\r\n  const totalSeconds = minutes * 60 + seconds;\r\n\r\n  const reset = () => {\r\n    setMinutes(initialMinutes);\r\n    setSeconds(initialSeconds);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setIsRunning(!isRunning);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Slider \r\n        disabled={isRunning}\r\n        value={totalSeconds}\r\n        min={0}\r\n        max={60 * 12} \r\n        step={15}\r\n        onChange={(e, value) => {\r\n          const newMinutes = Math.floor(value / 60);\r\n          const newSeconds = value % 60;\r\n          setMinutes(newMinutes);\r\n          setSeconds(newSeconds);\r\n        }}\r\n      />\r\n\r\n      <Typography variant=\"h4\">\r\n        {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n      </Typography>\r\n\r\n      <Button onClick={toggle}>{isRunning ? 'Пауза' : 'Старт'}</Button>\r\n      <Button onClick={reset}>Сброс</Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Countdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}