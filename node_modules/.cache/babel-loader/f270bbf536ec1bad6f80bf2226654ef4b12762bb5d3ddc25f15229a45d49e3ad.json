{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vladi\\\\Desktop\\\\\\u0420\\u0435\\u0430\\u043A\\u0442 \\u0441 \\u043A\\u043B\\u0430\\u0443\\u0434\\u0438\\u0438\\\\my-app\\\\src\\\\components\\\\Countdown\\\\Countdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, TextField } from '@mui/material';\nimport { Box } from '../../assets/styles/components';\nimport Btn from './Btn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = () => {\n  _s();\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [minutesInput, setMinutesInput] = useState(minutes);\n  const [secondsInput, setSecondsInput] = useState(seconds);\n  const [totalSeconds, setTotalSeconds] = useState(minutes * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [progress, setProgress] = useState(100);\n  function playAudio() {\n    const audioUrl = 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3';\n    const audio = new Audio(audioUrl);\n    audio.play().then(() => {\n      console.log('Аудио воспроизводится');\n    }).catch(error => {\n      console.error('Произошла ошибка при воспроизведении аудио:', error);\n    });\n  }\n\n  // Обновляем минуты и секунды при изменении input\n  useEffect(() => {\n    if (!isRunning) {\n      setMinutes(minutesInput);\n      setSeconds(secondsInput);\n    }\n  }, [minutesInput, secondsInput, isRunning]);\n\n  // Таймер\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        if (totalSeconds > 0) {\n          setTotalSeconds(prevTotalSeconds => prevTotalSeconds - 1);\n        } else if (minutes > 0) {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        } else {\n          clearInterval(interval);\n          playAudio();\n        }\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, totalSeconds]);\n\n  // Сброс таймера\n  const reset = () => {\n    setMinutesInput(0);\n    setSecondsInput(0);\n    setMinutes(0);\n    setSeconds(0);\n    setIsRunning(false);\n  };\n\n  // Переключение таймера\n  const toggle = () => {\n    if (!isRunning) {\n      setIsRunning(true);\n    } else {\n      setIsRunning(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      type: \"number\",\n      disabled: isRunning,\n      value: minutesInput,\n      onChange: e => setMinutesInput(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      disabled: isRunning,\n      color: \"secondary\",\n      type: \"number\",\n      value: secondsInput,\n      onChange: e => setSecondsInput(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Btn, {\n      isRunning: isRunning,\n      toggle: toggle,\n      reset: reset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Countdown, \"/bF2RITofNUWtLv2eKZMhrSXS2k=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","Typography","TextField","Box","Btn","jsxDEV","_jsxDEV","Countdown","_s","minutes","setMinutes","seconds","setSeconds","minutesInput","setMinutesInput","secondsInput","setSecondsInput","totalSeconds","setTotalSeconds","isRunning","setIsRunning","progress","setProgress","playAudio","audioUrl","audio","Audio","play","then","console","log","catch","error","interval","setInterval","prevTotalSeconds","clearInterval","reset","toggle","children","type","disabled","value","onChange","e","parseInt","target","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","_c","$RefreshReg$"],"sources":["C:/Users/vladi/Desktop/Реакт с клаудии/my-app/src/components/Countdown/Countdown.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography, Button, TextField } from '@mui/material';\r\nimport { Box } from '../../assets/styles/components';\r\nimport Btn from './Btn';\r\nconst Countdown: React.FC = () => {\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    const [minutesInput, setMinutesInput] = useState(minutes);\r\n    const [secondsInput, setSecondsInput] = useState(seconds);\r\n\r\n    const [totalSeconds, setTotalSeconds] = useState(minutes * 60);\r\n\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [progress, setProgress] = useState(100);\r\n    \r\n    function playAudio() {\r\n        const audioUrl = 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3';\r\n        const audio = new Audio(audioUrl);\r\n        audio\r\n            .play()\r\n            .then(() => {\r\n                console.log('Аудио воспроизводится');\r\n            })\r\n            .catch(error => {\r\n                console.error('Произошла ошибка при воспроизведении аудио:', error);\r\n            });\r\n    }\r\n\r\n    // Обновляем минуты и секунды при изменении input\r\n    useEffect(() => {\r\n        if (!isRunning) {\r\n            setMinutes(minutesInput);\r\n            setSeconds(secondsInput);\r\n        }\r\n    }, [minutesInput, secondsInput, isRunning]);\r\n\r\n    // Таймер\r\n    useEffect(() => {\r\n        let interval: NodeJS.Timer;\r\n        if (isRunning) {\r\n            interval = setInterval(() => {\r\n                if (totalSeconds > 0) {\r\n                    setTotalSeconds((prevTotalSeconds) => prevTotalSeconds - 1);\r\n                } else if (minutes > 0) {\r\n                    setMinutes(minutes - 1);\r\n                    setSeconds(59);\r\n                } else {\r\n                    clearInterval(interval);\r\n                    playAudio();\r\n                }\r\n            }, 1000);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isRunning, totalSeconds]);\r\n\r\n    // Сброс таймера\r\n    const reset = () => {\r\n        setMinutesInput(0);\r\n        setSecondsInput(0);\r\n        setMinutes(0);\r\n        setSeconds(0);\r\n        setIsRunning(false);\r\n    };\r\n\r\n    // Переключение таймера\r\n    const toggle = () => {\r\n        if (!isRunning) {\r\n            setIsRunning(true);\r\n        } else {\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <TextField\r\n                type='number'\r\n                disabled={isRunning}\r\n                value={minutesInput}\r\n                onChange={e => setMinutesInput(parseInt(e.target.value))}\r\n            />\r\n\r\n            <TextField\r\n                disabled={isRunning}\r\n                color='secondary'\r\n                type='number'\r\n                value={secondsInput}\r\n                onChange={e => setSecondsInput(parseInt(e.target.value))}\r\n            />\r\n\r\n            <Typography variant='h4'>\r\n                {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n            </Typography>\r\n            <Btn isRunning={isRunning} toggle={toggle} reset={reset} />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Countdown;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}