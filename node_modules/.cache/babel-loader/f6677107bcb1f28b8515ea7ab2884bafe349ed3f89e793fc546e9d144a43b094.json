{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vladi\\\\Desktop\\\\\\u0420\\u0435\\u0430\\u043A\\u0442 \\u0441 \\u043A\\u043B\\u0430\\u0443\\u0434\\u0438\\u0438\\\\my-app\\\\src\\\\components\\\\Countdown\\\\Countdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Slider, Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = ({\n  initialMinutes = 0,\n  initialSeconds = 0\n}) => {\n  _s();\n  const [minutes, setMinutes] = useState(initialMinutes);\n  const [seconds, setSeconds] = useState(initialSeconds);\n  const [minutesInput, setMinutesInput] = useState(initialMinutes);\n  const [secondsInput, setSecondsInput] = useState(initialSeconds);\n  const [totalSeconds, setTotalSeconds] = useState(initialMinutes * 60 + initialSeconds);\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    const total = minutesInput * 60 + secondsInput;\n    setTotalSeconds(total);\n  }, [minutesInput, secondsInput]);\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        } else if (minutes > 0) {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        } else {\n          clearInterval(interval);\n          const audio = new Audio('/countdown-finish.mp3');\n          audio.play();\n        }\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, minutes, seconds]);\n  const reset = () => {\n    setMinutes(initialMinutes);\n    setSeconds(initialSeconds);\n    setIsRunning(false);\n  };\n  const toggle = () => {\n    setIsRunning(!isRunning);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      disabled: isRunning,\n      value: totalSeconds,\n      onChange: (e, value) => setTotalSeconds(value),\n      min: 0,\n      max: 60 * 12,\n      step: 15\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"number\",\n      value: minutesInput,\n      onChange: e => setMinutesInput(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"number\",\n      value: secondsInput,\n      onChange: e => setSecondsInput(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggle,\n      children: isRunning ? 'Пауза' : 'Старт'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: reset,\n      children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"hp/rY+1DdqmamoGD+gTyHqKNHHI=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Slider","Button","TextField","jsxDEV","_jsxDEV","Countdown","initialMinutes","initialSeconds","_s","minutes","setMinutes","seconds","setSeconds","minutesInput","setMinutesInput","secondsInput","setSecondsInput","totalSeconds","setTotalSeconds","isRunning","setIsRunning","total","interval","setInterval","clearInterval","audio","Audio","play","reset","toggle","children","disabled","value","onChange","e","min","max","step","fileName","_jsxFileName","lineNumber","columnNumber","type","parseInt","target","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vladi/Desktop/Реакт с клаудии/my-app/src/components/Countdown/Countdown.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Slider, Button, TextField } from '@mui/material';\r\n\r\ninterface CountdownProps {\r\n  initialMinutes?: number;\r\n  initialSeconds?: number; \r\n}\r\n\r\nconst Countdown: React.FC<CountdownProps> = ({\r\n  initialMinutes = 0,\r\n  initialSeconds = 0  \r\n}) => {\r\n\r\n  const [minutes, setMinutes] = useState(initialMinutes);\r\n  const [seconds, setSeconds] = useState(initialSeconds);\r\n  \r\n  const [minutesInput, setMinutesInput] = useState(initialMinutes);\r\n  const [secondsInput, setSecondsInput] = useState(initialSeconds);\r\n\r\n  const [totalSeconds, setTotalSeconds] = useState(initialMinutes * 60 + initialSeconds);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const total = minutesInput * 60 + secondsInput; \r\n    setTotalSeconds(total);\r\n  }, [minutesInput, secondsInput])\r\n\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timer;\r\n    if (isRunning) {\r\n      interval = setInterval(() => {\r\n        if (seconds > 0) {\r\n          setSeconds(seconds - 1);\r\n        } else if (minutes > 0) {\r\n          setMinutes(minutes - 1);\r\n          setSeconds(59);\r\n        } else {\r\n          clearInterval(interval);\r\n          \r\n          const audio = new Audio('/countdown-finish.mp3');\r\n          audio.play();\r\n        }\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isRunning, minutes, seconds]);\r\n\r\n  const reset = () => {\r\n    setMinutes(initialMinutes);\r\n    setSeconds(initialSeconds);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setIsRunning(!isRunning);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Slider \r\n        disabled={isRunning}\r\n        value={totalSeconds}\r\n        onChange={(e, value) => setTotalSeconds(value)}\r\n        min={0}\r\n        max={60 * 12}\r\n        step={15} \r\n      />\r\n\r\n      <TextField\r\n        type=\"number\"\r\n        value={minutesInput}\r\n        onChange={(e) => setMinutesInput(parseInt(e.target.value))}\r\n      />\r\n\r\n      <TextField \r\n        type=\"number\"\r\n        value={secondsInput}\r\n        onChange={(e) => setSecondsInput(parseInt(e.target.value))}\r\n      />\r\n\r\n      <Typography variant=\"h4\">\r\n        {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n      </Typography>\r\n\r\n      <Button onClick={toggle}>\r\n        {isRunning ? 'Пауза' : 'Старт'}\r\n      </Button>\r\n      <Button onClick={reset}>Сброс</Button>\r\n\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Countdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}