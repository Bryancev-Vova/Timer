{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vladi\\\\Desktop\\\\\\u0420\\u0435\\u0430\\u043A\\u0442 \\u0441 \\u043A\\u043B\\u0430\\u0443\\u0434\\u0438\\u0438\\\\my-app\\\\src\\\\components\\\\Countdown\\\\Countdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = () => {\n  _s();\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [minutesInput, setMinutesInput] = useState(0);\n  const [secondsInput, setSecondsInput] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n\n  //   function playAudio() {\n  //     const audioUrl = 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3';\n  //     const audio = new Audio(audioUrl);\n  //     audio.play()\n  //         .then(() => {\n  //         console.log('Аудио воспроизводится');\n  //     })\n  //     .catch((error) => {\n  //         console.error('Произошла ошибка при воспроизведении аудио:', error);\n  //     });\n  // }\n\n  // Обновляем минуты и секунды при изменении input\n  useEffect(() => {\n    setMinutes(minutesInput);\n    setSeconds(secondsInput);\n  }, [minutesInput, secondsInput]);\n\n  // Таймер\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        } else {\n          clearInterval(interval);\n          // playAudio()\n        }\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, minutes, seconds]);\n\n  // Сброс таймера\n  const reset = () => {\n    setMinutesInput(0);\n    setSecondsInput(0);\n    setIsRunning(false);\n  };\n\n  // Переключение таймера\n  const toggle = () => {\n    if (!isRunning) {\n      setIsRunning(true);\n    } else {\n      setIsRunning(false);\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      type: \"number\",\n      value: minutesInput,\n      onChange: e => setMinutesInput(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"number\",\n      value: secondsInput,\n      onChange: e => setSecondsInput(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggle,\n      children: isRunning ? 'Пауза' : 'Старт'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: reset,\n      children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"d3XSZXaeF3ldgc2l612enXLFXMU=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","TextField","jsxDEV","_jsxDEV","Countdown","_s","minutes","setMinutes","seconds","setSeconds","minutesInput","setMinutesInput","secondsInput","setSecondsInput","isRunning","setIsRunning","interval","setInterval","clearInterval","reset","toggle","children","type","value","onChange","e","parseInt","target","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vladi/Desktop/Реакт с клаудии/my-app/src/components/Countdown/Countdown.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Button, TextField } from '@mui/material';\r\n\r\nimport useSound from 'use-sound'\r\nconst Countdown: React.FC = () => {\r\n\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  const [minutesInput, setMinutesInput] = useState(0);\r\n  const [secondsInput, setSecondsInput] = useState(0);\r\n\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  \r\n\r\n//   function playAudio() {\r\n//     const audioUrl = 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3';\r\n//     const audio = new Audio(audioUrl);\r\n//     audio.play()\r\n//         .then(() => {\r\n//         console.log('Аудио воспроизводится');\r\n//     })\r\n//     .catch((error) => {\r\n//         console.error('Произошла ошибка при воспроизведении аудио:', error);\r\n//     });\r\n// }\r\n\r\n  // Обновляем минуты и секунды при изменении input\r\n  useEffect(() => {\r\n    setMinutes(minutesInput);\r\n    setSeconds(secondsInput);\r\n  }, [minutesInput, secondsInput])\r\n\r\n  // Таймер\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timer;\r\n    if (isRunning) {\r\n      interval = setInterval(() => {\r\n        if (seconds > 0) {\r\n          setSeconds(seconds - 1);\r\n        } else {\r\n          clearInterval(interval);\r\n          // playAudio()\r\n        }\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isRunning, minutes, seconds]);\r\n\r\n  // Сброс таймера\r\n  const reset = () => {\r\n    setMinutesInput(0);\r\n    setSecondsInput(0);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  // Переключение таймера\r\n  const toggle = () => {\r\n    if (!isRunning) {\r\n        setIsRunning(true);\r\n    } else {\r\n        setIsRunning(false)\r\n    };\r\n  };\r\n\r\n  \r\n  return (\r\n    <Box>\r\n      <TextField\r\n        type=\"number\"\r\n        value={minutesInput}\r\n        onChange={(e) => setMinutesInput(parseInt(e.target.value))}\r\n      />\r\n\r\n      <TextField\r\n        type=\"number\" \r\n        value={secondsInput}\r\n        onChange={(e) => setSecondsInput(parseInt(e.target.value))}\r\n      />\r\n\r\n      <Typography variant=\"h4\">\r\n        {minutes}:{seconds < 10 ? `0${seconds}` : seconds} \r\n      </Typography>\r\n\r\n      <Button onClick={toggle}>\r\n        {isRunning ? 'Пауза' : 'Старт'}\r\n      </Button>\r\n      <Button onClick={reset}>Сброс</Button>\r\n\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Countdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}