{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vladi\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (2)\\\\my-app\\\\src\\\\components\\\\Timer.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './Timer.css';\nimport { useState, useEffect, useCallback } from 'react';\nimport { Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const [time, setTime] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 10);\n      }, 10);\n    } else if (!isActive && time !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, time]);\n  const toggle = useCallback(() => {\n    setIsActive(prevState => !prevState);\n  }, []);\n  const reset = useCallback(() => {\n    setTime(0);\n    setIsActive(false);\n  }, []);\n  const formattedTime = useCallback(() => {\n    const getTimeUnits = ms => {\n      const seconds = Math.floor(ms / 1000 % 60);\n      const minutes = Math.floor(ms / 1000 / 60 % 60);\n      const milliseconds = ms % 1000;\n      return [minutes, seconds, milliseconds];\n    };\n    const [minutes, seconds, milliseconds] = getTimeUnits(time);\n    return `${minutes}:${seconds}:${milliseconds}`;\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: formattedTime()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: toggle,\n      children: isActive ? 'Pause' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"error\",\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Timer, \"xgm3BXDgQG300t9RS04Sv5Gc268=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Button","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","Timer","_s","time","setTime","isActive","setIsActive","interval","setInterval","prevTime","clearInterval","toggle","prevState","reset","formattedTime","getTimeUnits","ms","seconds","Math","floor","minutes","milliseconds","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/vladi/Desktop/Новая папка (2)/my-app/src/components/Timer.tsx"],"sourcesContent":["import React from \"react\";\r\nimport './Timer.css'\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { Button, Typography } from '@mui/material';\r\n\r\nconst Timer = () => {\r\n  const [time, setTime] = useState(0);\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let interval: any = null;\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        setTime(prevTime => prevTime + 10);\r\n      }, 10);\r\n    } else if (!isActive && time !== 0) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isActive, time]);\r\n\r\n  const toggle = useCallback(() => {\r\n    setIsActive(prevState => !prevState);\r\n  }, []);\r\n\r\n  const reset = useCallback(() => {\r\n    setTime(0);\r\n    setIsActive(false);\r\n  }, []);\r\n\r\n  const formattedTime = useCallback(() => {\r\n    const getTimeUnits = (ms: number) => {\r\n      const seconds = Math.floor((ms / 1000) % 60);\r\n      const minutes = Math.floor((ms / 1000 / 60) % 60);\r\n      const milliseconds = ms % 1000;\r\n\r\n      return [minutes, seconds, milliseconds];\r\n    };\r\n\r\n    const [minutes, seconds, milliseconds] = getTimeUnits(time);\r\n\r\n    return `${minutes}:${seconds}:${milliseconds}`;\r\n  }, [time]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\">Timer</Typography>\r\n      <Typography variant=\"h3\">{formattedTime()}</Typography>\r\n      <Button variant=\"contained\" onClick={toggle}>\r\n        {isActive ? 'Pause' : 'Start'}\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"error\" onClick={reset}>\r\n        Reset\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Timer"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAEpB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,IAAIc,QAAa,GAAG,IAAI;IACxB,IAAIF,QAAQ,EAAE;MACZE,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BJ,OAAO,CAACK,QAAQ,IAAIA,QAAQ,GAAG,EAAE,CAAC;MACpC,CAAC,EAAE,EAAE,CAAC;IACR,CAAC,MAAM,IAAI,CAACJ,QAAQ,IAAIF,IAAI,KAAK,CAAC,EAAE;MAClCO,aAAa,CAACH,QAAQ,CAAC;IACzB;IACA,OAAO,MAAMG,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACF,QAAQ,EAAEF,IAAI,CAAC,CAAC;EAEpB,MAAMQ,MAAM,GAAGjB,WAAW,CAAC,MAAM;IAC/BY,WAAW,CAACM,SAAS,IAAI,CAACA,SAAS,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAGnB,WAAW,CAAC,MAAM;IAC9BU,OAAO,CAAC,CAAC,CAAC;IACVE,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,aAAa,GAAGpB,WAAW,CAAC,MAAM;IACtC,MAAMqB,YAAY,GAAIC,EAAU,IAAK;MACnC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAEH,EAAE,GAAG,IAAI,GAAI,EAAE,CAAC;MAC5C,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,EAAE,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;MACjD,MAAMK,YAAY,GAAGL,EAAE,GAAG,IAAI;MAE9B,OAAO,CAACI,OAAO,EAAEH,OAAO,EAAEI,YAAY,CAAC;IACzC,CAAC;IAED,MAAM,CAACD,OAAO,EAAEH,OAAO,EAAEI,YAAY,CAAC,GAAGN,YAAY,CAACZ,IAAI,CAAC;IAE3D,OAAQ,GAAEiB,OAAQ,IAAGH,OAAQ,IAAGI,YAAa,EAAC;EAChD,CAAC,EAAE,CAAClB,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA,CAACF,UAAU;MAAC2B,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC3C7B,OAAA,CAACF,UAAU;MAAC2B,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAER,aAAa,CAAC;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACvD7B,OAAA,CAACH,MAAM;MAAC4B,OAAO,EAAC,WAAW;MAACK,OAAO,EAAEjB,MAAO;MAAAW,QAAA,EACzCjB,QAAQ,GAAG,OAAO,GAAG;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACT7B,OAAA,CAACH,MAAM;MAAC4B,OAAO,EAAC,WAAW;MAACM,KAAK,EAAC,OAAO;MAACD,OAAO,EAAEf,KAAM;MAAAS,QAAA,EAAC;IAE1D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAACzB,EAAA,CAnDID,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AAsDX,eAAeA,KAAK;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}