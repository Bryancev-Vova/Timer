{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vladi\\\\Desktop\\\\\\u0420\\u0435\\u0430\\u043A\\u0442 \\u0441 \\u043A\\u043B\\u0430\\u0443\\u0434\\u0438\\u0438\\\\my-app\\\\src\\\\components\\\\Countdown\\\\Countdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, TextField } from '@mui/material';\nimport Input from '@mui/material/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = () => {\n  _s();\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [minutesInput, setMinutesInput] = useState(0);\n  const [secondsInput, setSecondsInput] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isInit, setIsInit] = useState(false);\n\n  // Обновляем минуты и секунды при изменении input\n  useEffect(() => {\n    setMinutes(minutesInput);\n    setSeconds(secondsInput);\n  }, [minutesInput, secondsInput]);\n\n  // Таймер\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => {\n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        } else if (minutes > 0) {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        }\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, minutes, seconds]);\n\n  // Сброс таймера\n  const reset = () => {\n    setMinutesInput(0);\n    setSecondsInput(0);\n    setIsRunning(false);\n  };\n\n  // Переключение таймера\n  const toggle = () => {\n    if (!isRunning) {\n      setIsRunning(true);\n    } else {\n      setIsRunning(false);\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      type: \"number\",\n      value: minutesInput,\n      onChange: e => setMinutesInput(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\",\n      inputProps: {\n        min: 0,\n        max: 59\n      },\n      value: secondsInput,\n      onChange: e => setSecondsInput(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\",\n      inputProps: {\n        min: 0,\n        max: 720\n      },\n      value: minutesInput,\n      onChange: e => setMinutesInput(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"number\",\n      value: secondsInput,\n      onChange: e => setSecondsInput(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggle,\n      children: isRunning ? 'Пауза' : 'Старт'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: reset,\n      children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"mYJqiHb70LXoQov84oSHDuAmCKo=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","TextField","Input","jsxDEV","_jsxDEV","Countdown","_s","minutes","setMinutes","seconds","setSeconds","minutesInput","setMinutesInput","secondsInput","setSecondsInput","isRunning","setIsRunning","isInit","setIsInit","interval","setInterval","clearInterval","reset","toggle","children","type","value","onChange","e","parseInt","target","fileName","_jsxFileName","lineNumber","columnNumber","inputProps","min","max","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vladi/Desktop/Реакт с клаудии/my-app/src/components/Countdown/Countdown.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Button, TextField } from '@mui/material';\r\nimport Input from '@mui/material/Input';\r\n\r\nconst Countdown: React.FC = () => {\r\n\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  const [minutesInput, setMinutesInput] = useState(0);\r\n  const [secondsInput, setSecondsInput] = useState(0);\r\n\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isInit, setIsInit] = useState(false)\r\n\r\n\r\n\r\n  // Обновляем минуты и секунды при изменении input\r\n  useEffect(() => {\r\n    setMinutes(minutesInput);\r\n    setSeconds(secondsInput);\r\n  }, [minutesInput, secondsInput])\r\n\r\n  // Таймер\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timer;\r\n    if (isRunning) {\r\n      interval = setInterval(() => {\r\n        if (seconds > 0) {\r\n          setSeconds(seconds - 1);\r\n        } else if (minutes > 0) {\r\n          setMinutes(minutes - 1);\r\n          setSeconds(59);\r\n        }\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isRunning, minutes, seconds]);\r\n\r\n  // Сброс таймера\r\n  const reset = () => {\r\n    setMinutesInput(0);\r\n    setSecondsInput(0);\r\n    setIsRunning(false);\r\n  };\r\n\r\n  // Переключение таймера\r\n  const toggle = () => {\r\n    if (!isRunning) {\r\n        setIsRunning(true);\r\n    } else {\r\n        setIsRunning(false)\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <TextField\r\n        type=\"number\"\r\n        value={minutesInput}\r\n        onChange={(e) => setMinutesInput(parseInt(e.target.value))}\r\n      />\r\n<Input\r\n  type=\"number\"\r\n  inputProps={{\r\n    min: 0,\r\n    max: 59\r\n  }}\r\n  value={secondsInput}\r\n  onChange={(e) => setSecondsInput(parseInt(e.target.value))} \r\n/>\r\n<Input\r\n  type=\"number\" \r\n  inputProps={{\r\n    min: 0,\r\n    max: 720\r\n  }}\r\n  value={minutesInput}\r\n  onChange={(e) => setMinutesInput(parseInt(e.target.value))}\r\n/>\r\n      <TextField\r\n        type=\"number\" \r\n        value={secondsInput}\r\n        onChange={(e) => setSecondsInput(parseInt(e.target.value))}\r\n      />\r\n\r\n      <Typography variant=\"h4\">\r\n        {minutes}:{seconds < 10 ? `0${seconds}` : seconds} \r\n      </Typography>\r\n\r\n      <Button onClick={toggle}>\r\n        {isRunning ? 'Пауза' : 'Старт'}\r\n      </Button>\r\n      <Button onClick={reset}>Сброс</Button>\r\n\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Countdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}