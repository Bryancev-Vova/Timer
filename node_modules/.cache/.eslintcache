[{"C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\index.tsx":"1","C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\app.tsx":"2","C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\components\\Timer\\Timer.tsx":"3","C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\components\\Countdown\\Countdown.tsx":"4","C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\components\\Countdown\\Countdown_button.tsx":"5","C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\components\\Countdown\\Countdown_input.tsx":"6","C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\assets\\styles\\components.tsx":"7"},{"size":277,"mtime":1696169206662,"results":"8","hashOfConfig":"9"},{"size":272,"mtime":1696695072755,"results":"10","hashOfConfig":"9"},{"size":1880,"mtime":1700116088300,"results":"11","hashOfConfig":"9"},{"size":2859,"mtime":1696845776819,"results":"12","hashOfConfig":"9"},{"size":670,"mtime":1696846033533,"results":"13","hashOfConfig":"9"},{"size":2116,"mtime":1696845958732,"results":"14","hashOfConfig":"9"},{"size":343,"mtime":1696846194555,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wrb7gk",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\index.tsx",[],[],"C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\app.tsx",[],[],"C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\components\\Timer\\Timer.tsx",[],[],"C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\components\\Countdown\\Countdown.tsx",["38","39"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Typography, TextField } from '@mui/material';\r\nimport { Box } from '../../assets/styles/components';\r\nimport CountdownButton from './Countdown_button';\r\nimport CountdownInput from './Countdown_input';\r\n\r\n\r\nconst Countdown: React.FC = () => {\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    const [minutesInput, setMinutesInput] = useState(0);\r\n    const [secondsInput, setSecondsInput] = useState(0);\r\n\r\n    const [isRunning, setIsRunning] = useState(false);\r\n   \r\n    function playAudio() {\r\n        const audioUrl = 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3';\r\n        const audio = new Audio(audioUrl);\r\n        audio\r\n            .play()\r\n            .then(() => {\r\n                console.log('Аудио воспроизводится');\r\n            })\r\n            .catch(error => {\r\n                console.error('Произошла ошибка при воспроизведении аудио:', error);\r\n            });\r\n    }\r\n\r\n    // Обновляем минуты и секунды при изменении input\r\n    useEffect(() => {\r\n        setMinutes(minutesInput);\r\n        setSeconds(secondsInput);\r\n    }, [minutesInput, secondsInput]);\r\n\r\n    // Таймер\r\n    useEffect(() => {\r\n        let interval: NodeJS.Timer;\r\n        if (isRunning) {\r\n            interval = setInterval(() => {\r\n                if (seconds > 0) {\r\n                    setSeconds(seconds - 1);\r\n                } else if (minutes > 0) {\r\n                    setMinutes(minutes - 1);\r\n                    setSeconds(59);\r\n                } else {\r\n                    clearInterval(interval);\r\n                    playAudio();\r\n                }\r\n            }, 1000);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isRunning, minutes, seconds]);\r\n\r\n    // Сброс таймера\r\n    const reset = () => {\r\n        setMinutesInput(0);\r\n        setSecondsInput(0);\r\n        setIsRunning(false);\r\n        \r\n        \r\n    };\r\n\r\n    // Переключение таймера\r\n    const toggle = () => {\r\n        if (!isRunning) {\r\n            setIsRunning(true);\r\n        } else {\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n    const handleSetTime = (minutes: number, seconds: number) => {\r\n        setMinutesInput(minutes);\r\n        setSecondsInput(seconds);\r\n      };\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <h1>Countdown</h1>\r\n            <CountdownInput onSetTime={handleSetTime} disabled={isRunning}/>\r\n            <Typography  variant='h4'>\r\n                {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n            </Typography>\r\n            <CountdownButton isRunning={isRunning} toggle={toggle} reset={reset} />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Countdown;\r\n","C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\components\\Countdown\\Countdown_button.tsx",[],[],"C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\components\\Countdown\\Countdown_input.tsx",[],[],"C:\\Users\\vladi\\Desktop\\Задачи и практика\\timer\\src\\assets\\styles\\components.tsx",[],[],{"ruleId":"40","severity":1,"message":"41","line":2,"column":22,"nodeType":"42","messageId":"43","endLine":2,"endColumn":31},{"ruleId":"44","severity":1,"message":"45","line":23,"column":17,"nodeType":"46","messageId":"47","endLine":23,"endColumn":28},"@typescript-eslint/no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected"]